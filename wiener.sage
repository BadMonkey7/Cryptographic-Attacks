import time

def recover(e,N):
    cf = convergents(e/N)
    G.<x> = ZZ['x']
    for index, k in enumerate(cf[1:]):
        d0 = k.denominator()
        k = k.numerator()
        if k != 0 and (e * d0 - 1) % k == 0:
            
            phi = (e*d0 - 1) //k
            s = (N-phi+1)
            f = x^2 - s*x + N
            b = f.discriminant()
            print(d0)
            if b > 0 and b.is_square():
                d = d0
                
                roots = zip(*f.roots())[0]
                if len(roots) == 2 and prod(roots) == N:
                    return d
            else:
                continue

    return -1
    

def wiener(c,e,N):
    d = recover(e,N)
    return hex(Integer(pow(c,d,N)))

def test():
    
    e = 2065659454658019741780522570419376267931036082571377113532943424886952853219885592888546058433700094658894057336807857079282524074810812659298259543680548665395629065595040507999387715499956304724045136225056327421882545091174374570023424535112498454573479876181424784110131185483172182567718771705357890630390524098272037132047386754987122041548608712507049648368618233039815189112679401751673818053814414216405396571717867682135903220899506431110321
    N = 15400885188485388049229946115512511353845197043097285530075409718388590971501843031369538958459169822303236190066396248608622037606343820483841010751744253075387229800570159335032337643532517901246837393402971049197240224798725537792741680433188129746634857065058382842170932826771717848138506068088433052708419697033705085891848264001733184025953542048382911813415973137050911264369215530304400136356189146873204291644040454522340419405810227455030169
    c = 28597279540907845916896971896622579477094800063195357522872064880257242094960385766598625167905853008548847375383954235220740939323699019293114186352234014502088314580612832215339119526402952330072190226295529377477338762835260671088018604333831307855443665750192375976613594120878626650442933628547520861194
    
    d = recover(e,N)
    print(d)
test()
